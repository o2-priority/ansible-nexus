---

- name: Create nexus group
  group: name={{ nexus_group }}

- name: Create nexus user
  user:
    name:  "{{ nexus_user }}"
    group: "{{ nexus_group }}"
    shell: "/bin/bash"
    home:  "{{ nexus_home_dir }}"
    createhome: no

- name: Ensure parent directory of nexus install directory exists
  file:
    path:  "{{ nexus_base_dir }}"
    owner: root
    group: root
    mode:  0755
    state: directory

- name: Check if nexus is already installed
  stat: path={{ nexus_install_dir }}
  register: install_dir

- name: Skip nexus installation if the correct version is already installed
  set_fact: nexus_skip_install=true
  when: (install_dir.stat.isdir is defined and install_dir.stat.isdir) and not nexus_force_install

- name: Install Nexus OSS
  include: install.yml
  when: not nexus_skip_install|default(false)

- name: Create symlink to nexus install directory
  file:
    src:    "{{ nexus_install_dir }}"
    dest:   "{{ nexus_home_dir }}"
    owner:  "{{ nexus_user }}"
    group:  "{{ nexus_group }}"
    state:  link

- name: Create nexus pid directory
  file:
    path:  "{{ nexus_pid_dir }}"
    owner: "{{ nexus_user }}"
    group: "{{ nexus_group }}"
    mode:  0755
    state: directory

- name: Update nexus properties file
  template:
    src:   nexus.properties.j2
    dest:  "{{ nexus_home_dir }}/conf/nexus.properties"
    owner: "{{ nexus_user }}"
    group: "{{ nexus_group }}"
    mode:  0755
  notify: Restart nexus

- name: Create nexus init script
  template:
    src:   nexus.startup.j2
    dest:  /etc/init.d/nexus
    owner: root
    group: root
    mode:  0755
  when: ansible_service_mgr == 'upstart'
  notify: Restart nexus

- name: Create nexus systemd service script
  template:
    src:   nexus.service.j2
    dest:  "/etc/systemd/system/nexus.service"
    owner: root
    group: root
    mode:  0644
  when: ansible_service_mgr == 'systemd'
  notify:
    - Reload systemd
    - Restart nexus

- name: Start nexus
  service:
    name: nexus
    enabled: yes
    state: started
